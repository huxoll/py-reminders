<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Testing openstack clients against VIO.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>VPOD_ADDRESS</name>
          <description>IP Address vPod router.</description>
          <defaultValue>put_your_vPod_IP_address_here</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IMAGE_ID</name>
          <description>Docker container image (or snapshot) Id.

Image Name: ubuntu-14.04-server-amd64

Image Name: Ubuntu-14.04-LTS-Minimal-VMworld
</description>
          <defaultValue>Ubuntu-14.04-LTS-Minimal-VMworld</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>public_net_id</name>
          <description>public network id</description>
          <defaultValue>36e7a25b-f187-4243-9b71-e60495e10ace</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>private_net_id</name>
          <description>private network id</description>
          <defaultValue>0ea3efce-b7f3-446d-903e-5452ca1691ba</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>private_subnet_id</name>
          <description>private subnet id</description>
          <defaultValue>f9a6d90a-ae95-46ec-9c8d-a21e887a1358</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VRO_USER</name>
          <description>Auth user for VRO instance.</description>
          <defaultValue>administrator@vsphere.local</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>VRO_PASSWORD</name>
          <description>Auth password for VRO instance.</description>
          <defaultValue>put_your_vro_auth_password_here</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VRO_URL</name>
          <description>VRO workflow URL from which to obtain database host and credentials.</description>
          <defaultValue>https://put_your_vro_ip_addres_here:8281/vco/api/workflows/67d3e640-f338-4961-833d-e70893fc3b9e/executions</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

#OpenStack Info
export OS_AUTH_URL=https://${VPOD_ADDRESS}:5000/v2.0
export OS_TENANT_ID=b024ce4e402a4dcb9617554d39aee5a7
export OS_TENANT_NAME=&quot;demo&quot;
export OS_USERNAME=&quot;demo&quot;
export OS_PASSWORD=&quot;VMware1!&quot;
export OS_REGION_NAME=&quot;nova&quot;

# Don&apos;t leave a blank variable, unset it if it was empty
if [ -z &quot;$OS_REGION_NAME&quot; ]; then unset OS_REGION_NAME; fi

#############################################################
### Generate HEAT tempalte
cat &gt;vmworld.yaml &lt;&lt;EOF
heat_template_version: 2013-05-23

description: &gt;
  Deploys py-reminders server into an existing neutron tenant network and
  assigns floating IP address such that the server ends up routable to/from
  the public net. Note that this stack presumes that it is built in the
  context of a shell script as it is intended for jenkins builds (or
  similar). Thus the following env variables (for runtime expansion):
  ------
  BUILD_NUMBER -- the build number, usually provided by Jenkins;
  VRO_USER -- user name for vRO to authenticate (e.g.,jenkins build param);
  VRO_PASSWORD -- password for vRO authenticatation (e.g., jenkins build param);
  VRO_URL  -- URL to the vRO instance from which to obtain DB creds.
  ------

parameters:
  image:
    type: string
    description: Name of image to use for servers
  flavor:
    type: string
    description: Flavor to use for servers
  public_net_id:
    type: string
    description: &gt;
      ID of public network for which floating IP addresses will be allocated
  private_net_id:
    type: string
    description: ID of private network into which to deploy the server
  private_subnet_id:
    type: string
    description: ID of private sub network into which to deploy the server

resources:
  reminders:
    type: OS::Nova::Server
    properties:
      name: reminders-${BUILD_NUMBER}
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: reminders_port }
      user_data_format: RAW
      user_data: |
        #!/bin/bash -v
        ifconfig eth0 mtu 1450
        ifconfig docker0 mtu 1450
        service docker restart
        #apt-get update
        #apt-get install -y docker.io
        sleep 2
        docker pull opencloudtools/py-reminders
        docker run -d -p 8080:8080 opencloudtools/py-reminders /py-reminders -u &apos;${VRO_USER}&apos; -s &apos;${VRO_PASSWORD}&apos; -i -v &apos;${VRO_URL}&apos;

  reminders_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: [{ get_resource: server_security_group }]

  reminders_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: reminders_port }

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 8080
          port_range_max: 8080
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

outputs:
  reminders_private_ip:
    description: IP address of reminders in private network
    value: { get_attr: [ reminders, first_address ] }
  reminders_public_ip:
    description: Floating IP address of reminders in public network
    value: { get_attr: [ reminders_floating_ip, floating_ip_address ] }
EOF


#############################################################
### Run the HEAT stack
heat --insecure stack-create -f vmworld.yaml \
    -P &quot;image=${IMAGE_ID};flavor=m1.medium;public_net_id=${public_net_id};private_net_id=${private_net_id};private_subnet_id=${private_subnet_id}&quot; \
    py-reminders-${BUILD_NUMBER}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
